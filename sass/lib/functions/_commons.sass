@function get-rem($sizeInPx, $base: 16)
    @return $sizeInPx / $base / 1rem

@function px-to-em($sizeInPx, $base: 16)
    @return $sizeInPx / $base / 1em

@function get-percentage($target, $context)
    @return ($target / $context) * 100%

@function get-ls($unit, $return: 'em', $base: '16')
    @if $return == 'em'
        @return ($unit) / 1000+em
    @else
        @return ($unit * $base)/1000+px

@function str-replace($string, $search, $replace: '')
    $index: str-index($string, $search)

    @if $index
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace)

    @return $string

@function opposite-direction($directions)
    $opposite-directions: ()
    $direction-map: ('top': 'bottom', 'right': 'left', 'bottom': 'top', 'left': 'right', 'center': 'center', 'ltr': 'rtl', 'rtl': 'ltr')

    @each $direction in $directions
        $direction: to-lower-case($direction)

        @if map-has-key($direction-map, $direction)
            $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)))
        @else
            @warn "No opposite direction can be found for `#{$direction}`. Direction omitted."

    @return $opposite-directions

@function image-url($image)
    @return url($base-images-path + $image)

@function get-content-full-width()
    @return $content-max-width + ($content-side-offset * 2)


/// Test if `$value` is a valid direction
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value)
    $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value)
    $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value))

    @return $is-keyword or $is-angle


/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
/// @throw Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.;
@function legacy-direction($value)
    @if is-direction($value) == false
        @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction."

    $conversion-map: (to top: bottom, to top right: bottom left, to right top: left bottom, to right: left, to bottom right: top left, to right bottom: left top, to bottom: top, to bottom left: top right, to left bottom: right top, to left: right, to left top: right bottom, to top left: bottom right)

    @if map-has-key($conversion-map, $value)
        @return map-get($conversion-map, $value)

    @return 90deg - $value